apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  creationTimestamp: null
  name: ldapproxies.proxy.ar-consulting.redhat.com
spec:
  group: proxy.ar-consulting.redhat.com
  names:
    kind: LdapProxy
    listKind: LdapProxyList
    plural: ldapproxies
    singular: ldapproxy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LdapProxySpec define el estado deseado de LdapProxy
            properties:
              image:
                description: |-
                  Image es la imagen de contenedor a usar para el proxy ldap.
                  Contiene la URL completa de tu imagen en Quay.io.
                type: string
              ldapHost:
                type: string
              ldapPort:
                description: LdapPort es el puerto del servidor LDAP.
                type: string
              ldapServicePort:
                default: 389
                description: LdapServicePort es el puerto que expondrá el Service
                  para el tráfico LDAP.
                format: int32
                type: integer
              ldapUseTLS:
                description: LdapUseTLS indica si se debe usar TLS para conectar al
                  servidor LDAP.
                type: string
              ldapsServicePort:
                default: 636
                description: LdapsServicePort es el puerto que expondrá el Service
                  para el tráfico LDAPS.
                format: int32
                type: integer
              replicas:
                default: 1
                description: Replicas es el número de pods que se ejecutarán para
                  el proxy.
                format: int32
                minimum: 1
                type: integer
              resources:
                description: Resources define los requests y limits de CPU/Memoria
                  para el contenedor.
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              targetPort:
                default: 1389
                format: int32
                type: integer
            required:
            - image
            - ldapHost
            - ldapPort
            - ldapServicePort
            - ldapUseTLS
            - ldapsServicePort
            - replicas
            - targetPort
            type: object
          status:
            description: LdapProxyStatus define el estado observado de LdapProxy
            properties:
              nodes:
                description: PodNames son los nombres de los pods que están corriendo
                  el proxy.
                items:
                  type: string
                type: array
            required:
            - nodes
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
